This table will track vulnerability testing attempts made by users, mapping vulnerabilities to logs.

QUERY:

CREATE TABLE vulnerability_attempts (
    id INT AUTO_INCREMENT PRIMARY KEY,
    vulnerability_id INT NOT NULL,
    log_id INT NOT NULL,
    result ENUM('success', 'fail') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (vulnerability_id) REFERENCES vulnerabilities(id) ON DELETE CASCADE,
    FOREIGN KEY (log_id) REFERENCES logs(id) ON DELETE CASCADE
);


#vulnerability_id: References the vulnerability being tested.
#log_id: References the log entry for the attempt.
#result: Whether the attempt was a success or a failure.



********Vulnerability_Attempts Table Sample Data**********
QUERY:


INSERT INTO vulnerability_attempts (vulnerability_id, log_id, result, created_at) 
VALUES 
(1, 2, 'fail', NOW()), -- SQL Injection attempt failed by user1
(2, 3, 'success', NOW()), -- XSS attempt succeeded by user2
(1, 4, 'success', NOW()); -- SQL Injection attempt succeeded by admin

#result: Indicates if the attack attempt was a "success" or "fail."

